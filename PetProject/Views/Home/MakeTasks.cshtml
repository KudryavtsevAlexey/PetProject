@model IEnumerable<PetProject.Models.TaskModel>
<div class="container-fluid">
    <h3 class="display-4 mt-2 text-center">Here you can create new to do list</h3>
    <div class="row d-flex justify-content-center">
        <div class="mr-3">
            <a class="btn btn-success" asp-controller="Home" asp-action="CreateTask">Create new task</a>
        </div>
        <div class="ml-3 dropdown">
            <button class="dropdown-toggle btn btn-secondary" id="FiltrationDropdownMenu" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown">Filtration</button>
            <div class="dropdown-menu">
                <a asp-controller="Home" asp-action="MakeTasks" class="dropdown-item">All</a>
                <a asp-controller="Home" asp-action="FilterByDeadline" class="dropdown-item">Deadline</a>
                <a asp-controller="Home" asp-action="FilterByEditing" class="dropdown-item">Was edited</a>
                <a asp-controller="Home" asp-action="FilterByTimeOfLastUpdate" class="dropdown-item">By creation/editing time</a>
                <a asp-controller="Home" asp-action="FilterByExecutionPriority" class="dropdown-item">Execution priority</a>

            </div>
        </div>
    </div>
    <div class="w-100">
        @if (Model.Count() != 0)
        {
            <table class="table mt-4">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Task</th>
                        <th scope="col">Deadline</th>
                        <th scope="col">Creation/Editing time</th>
                        <th scope="col">Was edited</th>
                        <th scope="col">Execution Priority</th>
                        <th scope="col">Detailed description</th>
                        <th scope="col">Edit</th>
                        <th scope="col">Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @{ 
                        int id = 1;
                    }
                    @foreach (var task in Model)
                    {
                    <tr>
                        <th scope="row">@(id++)</th>
                        <td>@task.GoalTask</td>
                        <td>@task.FinishBefore</td>
                        @if (task.IsEdited == true)
                        {
                            <td>@task.EditedAt</td>
                            <td>Yes</td>
                        }
                        else
                        {
                            <td>@task.CreatedIn</td>
                            <td>No</td>
                        }
                        <td>@task.ExecutionPriority</td>
                        <td><a asp-controller="Home" asp-action="MoreDetails" asp-route-id="@task.TaskModelId" class="btn btn-info">More details</a></td>
                        <td><a asp-controller="Home" asp-action="EditTask" asp-route-id="@task.TaskModelId" class="btn btn-warning">Edit task</a></td>
                        <td><a asp-controller="Home" asp-action="DeleteTask" asp-route-id="@task.TaskModelId" class="btn btn-danger">Delete task</a></td>
                    </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
